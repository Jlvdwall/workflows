name: Main Workflow
on:
  workflow_dispatch:
    inputs:
      maxRetries:
        required: false
        default: 2
        type: integer
      retryInterval:
        required: false
        default: 5  # seconds
        type: integer
      script:
        required: false
        default: "run.py"
        type: string
    outputs:
      instanceId:
        description: "AWS EC2 instance ID of the self-hosted runner"
        value: ${{ jobs.example.outputs.instanceId }}

jobs:
  example:
    runs-on: ubuntu-latest
    name: Example Job
    outputs:
      instanceId: ${{ steps.retry-loop.outputs.instanceId }}
    steps:
      - id: checkout
        name: Checkout the repository
        uses: actions/checkout@v4
      - id: greet
        name: Run the greet composite action
        uses: ./.github/actions/greet
        with:
          visitor: "The Spanish Inquisition"
      - id: show
        name: Show random number
        env:
          RANDOM_NUMBER: ${{ steps.greet.outputs.random-number }}
        shell: bash
        run: echo random-number "$RANDOM_NUMBER"
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - id: retry-loop
        name: retry-loop
        shell: bash -l {0}
        run: |
          # FOO
          delay=${{ inputs.retryInterval }}
          count=0
          count_maximum=${{ inputs.maxRetries }}
          return_value=1
          while [[ $count -lt $count_maximum ]];
          do
            count=$((count + 1))
            stdout_value=$( \
              python \
              ${{ inputs.script }} \
            )
            return_value=$?
            if [[ $return_value -eq 0 ]]; then
              echo "(+) success"
              echo "$stdout_value"
              instance_id=$(echo "$stdout_value" | jq -r .Instances.[0].InstanceId)
              echo "instanceId=$instance_id" >> $GITHUB_OUTPUT
              break
            elif [[ $count -eq $count_maximum ]]; then
              echo "(-) failure, tried ${count} times"
            else
              echo "(-) failure, trying again in ${delay} seconds"
              sleep $delay
            fi
          done
          exit $return_value
      - run: |
          echo ${{ steps.retry-loop.outputs.instanceId }}
          echo ${{ outputs.instanceId }}

  # another:
  #   runs-on: ubuntu-latest
  #   name: Another Job
  #   steps:
  #     - shell: bash -l {0}
  #       run: |
  #         false
  #         echo "false1"
  #         false
  #     - shell: bash
  #       run: |
  #         false
  #         echo "false2"